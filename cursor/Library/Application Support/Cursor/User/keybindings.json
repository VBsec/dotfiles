[
    {
        "args": "<D-d>",
        "command": "vscode-neovim.send",
        "key": "cmd+d",
        "when": "editorFocus && neovim.init"
    },
    {
        "key": "cmd+c",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && neovim.mode == visual",
        "args": "<D-c>"
    },
    {
        "key": "alt+k",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && neovim.mode == normal || neovim.mode == visual",
        "args": "<A-k>"
    },
    {
        "key": "alt+j",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && neovim.mode == normal || neovim.mode == visual",
        "args": "<A-j>"
    },
    {
        "key": "alt+p",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && neovim.mode == insert",
        "args": "<A-p>"
    },
    {
        "key": "ctrl+shift+t",
        "command": "action.terminal.newInActiveWorkspace",
        "when": "terminalFocus",
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+g g",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "cmd+d",
        "command": "workbench.action.terminal.killActiveTab",
        "when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "cmd+backspace",
        "command": "-workbench.action.terminal.killActiveTab",
        "when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "ctrl+[BracketRight]",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "cmd+[Comma]",
        "command": "workbench.action.terminal.kill"
    },
    {
        "key": "cmd+[Comma]",
        "command": "-workbench.action.openSettings"
    },
    {
        "key": "cmd+e",
        "command": "-actions.findWithSelection"
    },
    {
        "key": "cmd+e",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "shift+cmd+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "shift+cmd+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "shift+cmd+e",
        "command": "workbench.action.closeSidebar"
    },
    {
        "key": "cmd+b",
        "command": "-markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+c e",
        "command": "editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFile",
        "when": "false"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    {
        "key": "shift+cmd+o",
        "command": "-devicetree.editor.showNodeQuickpick",
        "when": "activeCustomEditorId == 'devicetree.editor' || nrf-devicetree.editor.nodeTree.active && activeCustomEditorId == 'devicetree.editor'"
    },
    {
        "key": "shift+cmd+o",
        "command": "-editor.action.accessibleViewGoToSymbol",
        "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
    },
    {
        "key": "shift+cmd+o",
        "command": "workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "cmd+o",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+g m",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "shift+cmd+j",
        "command": "-aiSettings.action.open",
        "when": "!isSettingsPaneOpen"
    },
    {
        "key": "ctrl+g f",
        "command": "periscope.search"
    },
    {
        "key": "ctrl+c shift+e",
        "command": "editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+g o",
        "command": "workbench.action.tasks.reRunTask"
    },
    {
        "key": "ctrl+g b",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "alt+cmd+b",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "alt+cmd+b",
        "command": "-workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "-",
        "command": "voil.openPanelCurrentDir",
        "when": "!voilDoc && vim.mode == 'Normal'"
    },
    {
        "key": "-",
        "command": "voil.gotoParentDir",
        "when": "voilDoc && vim.mode == 'Normal' && editorFocus"
    },
    {
        "key": "shift+cmd+[Period]",
        "command": "workbench.action.createTerminalEditor"
    },
    {
        "key": "shift+cmd+[Period]",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+l",
        "command": "-vscode-neovim.send-cmdline",
        "when": "neovim.init && neovim.mode == 'cmdline'"
    },
    {
        "key": "ctrl+l",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.l && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+l",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.l && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+h",
        "command": "-vscode-neovim.send-cmdline",
        "when": "neovim.init && neovim.mode == 'cmdline'"
    },
    {
        "key": "ctrl+h",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.h && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+h",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.h && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+w ctrl+w",
        "command": "-workbench.action.focusNextGroup",
        "when": "!editorTextFocus && !filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+h",
        "command": "-deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusAboveGroup",
        "when": "!filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "cmd+r cmd+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.focusBelowGroup",
        "when": "!filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "cmd+r cmd+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+j",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.j && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+j",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.j && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+k",
        "command": "-deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.k && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+k",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.k && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusLeftGroup",
        "when": "!filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "cmd+r cmd+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusRightGroup",
        "when": "!filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "cmd+r cmd+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+g s",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+g ctrl+k",
        "command": "editor.action.triggerParameterHints"
    },
    {
        "key": "cmd+i",
        "command": "livegrep.search"
    }
]